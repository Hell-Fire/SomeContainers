name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '36 13 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  PLATFORMS: linux/amd64,linux/arm64/v8,linux/arm/v7

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
        - dockerfile: dhcpd/Dockerfile
          image: ${{ github.repository }}/dhcpd
        - dockerfile: icecast/Dockerfile
          image: ${{ github.repository }}/icecast
        - dockerfile: keepalived/Dockerfile
          image: ${{ github.repository }}/keepalived
        - dockerfile: movienight/Dockerfile
          image: ${{ github.repository }}/movienight
        - dockerfile: novnc/Dockerfile
          image: ${{ github.repository }}/novnc
        - dockerfile: ser2net/Dockerfile
          image: ${{ github.repository }}/ser2net
        - dockerfile: stunnel/Dockerfile
          image: ${{ github.repository }}/stunnel
        - dockerfile: websockify-go/Dockerfile
          image: ${{ github.repository }}/websockify-go

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image }}
          tags: |
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Get context
        id: get-context
        env:
          DOCKERFILE: ${{ matrix.dockerfile }}
        run: echo "context=$(dirname $DOCKERFILE)" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.get-context.outputs.context }}
          file: ${{ matrix.dockerfile }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --tlog-upload=false {}@${{ steps.build-and-push.outputs.digest }}
